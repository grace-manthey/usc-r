schools <- read.csv('poverty_count.csv')
demo(graphics)
library(readr)
Traffic_Collision_Data_from_2010_to_Present_1_ <- read_csv("Downloads/Traffic_Collision_Data_from_2010_to_Present (1).csv")
View(Traffic_Collision_Data_from_2010_to_Present_1_)
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("stringr")
install.packages("stringr")
library(stringr)
str_split_fixed(Traffic_Collision_Data_from_2010_to_Present_1_$Location, ", ", 2)
coords <- str_split_fixed(Traffic_Collision_Data_from_2010_to_Present_1_$Location, ", ", 2)
View(coords)
colnames(coords)<- c("lat","long")
View(coords)
str_remove(coords, "[()]")
View(coords)
coords <- str_remove(coords, "[()]")
View(coords)
coords <- str_remove(coords, "[()]")
coords <- str_split_fixed(Traffic_Collision_Data_from_2010_to_Present_1_$Location, ", ", 2)
colnames(coords)<- c("lat","long")
View(coords)
coords <- as.data.frame(coords)
coords$lat <- str_remove(coords$lat, "[()]")
coords$long <- str_remove(coords$long, "[()]")
View(coords)
View(coords)
rbind(Traffic_Collision_Data_from_2010_to_Present_1_, coords)
write_csv(coords, "~/Downloads/coords.csv")
install.packages("leaflet")
install.packages("rgdal")
library(leaflet)
library(rgdal)
install.packages("sp")
install.packages("sp")
library(leaflet)
library(rgdal)
setwd("~/Documents/USC/Term-3-Spring/Data/week14")
states <- readOGR(layer="tl_2018_us_state", GDAL1_integer64_policy = TRUE)
states <- readOGR("~/Documents/USC/Term-3-Spring/Data/week14/tl_2018_us_state",layer="tl_2018_us_state", GDAL1_integer64_policy = TRUE)
bestCoast <- subset(states, states$STUSPS %in% c("CA","OR","WA"))
leaflet(bestCoast) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5, opacity = 1.0, fillOpacity = 0.5, fillColor = ~colorQuantile("YlOrRd","ALAND")(ALAND), highlightOptions = highlightOptions(color = "white", weight=2, bringToFront = TRUE))
leaflet(bestCoast) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5, opacity = 1.0, fillOpacity = 0.5, fillColor = ~colorQuantile("YlOrRd",ALAND)(ALAND), highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(bestCoast) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5, opacity = 1.0, fillOpacity = 0.5, fillColor = ~colorQuantile("YlOrRd",ALAND)(ALAND), highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE)) %>%
addTiles()
leaflet(bestCoast) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5, opacity = 1.0, fillOpacity = 0.5, fillColor = ~colorQuantile("YlOrRd",ALAND)(ALAND), highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE)) %>%
addTiles() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap)
leaflet(bestCoast) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5, opacity = 1.0, fillOpacity = 0.5, fillColor = ~colorQuantile("YlOrRd",ALAND)(ALAND), highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE)) %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron)
install.packages("tidycensus")
library(tidycensus)
census_api_key("82cb051d5f060791be7f50c3cdf914ea52b90940", overwrite = FALSE, install = FALSE)
install.packages("dplyr", dependencies = TRUE)
install.packages("dplyr", dependencies = TRUE)
packageVersion("dplyr")
library(tidycensus)
remove.packages("dplyr")
install.packages("dplyr", dependencies = TRUE)
install.packages("dplyr", dependencies = TRUE)
packageVersion("dplyr")
install.packages("tidycensus")
library(tidycensus)
